<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee.user.mapper.MallUserMapper">
  <resultMap id="BaseResultMap" type="com.bee.user.pojo.MallUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mall_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bee.user.pojo.MallUser">
    insert into mall_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bee.user.pojo.MallUser">
    update mall_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
  </select>
  
  <select id="selectUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
    where username = #{username}
  </select>
  
   <select id="selectUserByPhone" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
    where phone = #{phone}
  </select>
  
  <select id="selectLogin" parameterType="map" resultMap="BaseResultMap" >
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
    where role = #{role} and username=#{username} and password = #{password}
  </select>
  
   <select id="selectQuestionByPhone" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mall_user
    where phone = #{phone}
  </select>
  <update id="updatePassword" parameterType="map">
    update mall_user set password = #{newPassword} where id = #{userId}
  </update>
  
   <update id="updateByPrimaryKeySelective" parameterType="com.bee.user.pojo.MallUser" >
    update mall_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="checkEmailByUserId" resultType="int" parameterType="map">
    select count(1) from mall_user
    where email = #{email}
    and id != #{userId}
   </select>
  
  
</mapper>